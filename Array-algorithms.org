Array Algorithms

* Intersection of two arrays

** Solution 1:

*** Create a hashtable to store elements of array 1 with count O(n)
*** Create a hashtable to store elements of array 2 with count O(m)
**** Total of O(m+n)
*** Compare two arrays O(m*n)
** Questions
*** Not memory to load array 2
*** What if array 1 smaller than array 2
*** What if arrays sorted

* Plus one

** Solution 1: Recursive solution

*** Add 1 to last element,   
*** if element is not 9, done
*** else recursive call to all one to previous element
*** If it is first element and 9, insert 1 in front

* Medium
** Set matrix o zeroes
*** Keep flag in first element of each row and column (0,0) (0,1) (0,2) (1,0) (2,0)
** Increasing subsequences
*** Loop through array and create map
**** In map, use array as value which holds any value greater than key value
**** if current value greater than any value in array, return true
**** First time - Add array in map, if second value greater than first value
** Permutation - backtracking
*** Return array of arrays
*** Take each element from input and add to array
*** If array of length = size of input, add array to result set
*** After reach end of array, backtrack to previous non complete permutation combination
*** Try add element to permutation as long as element did not exists
*** Else backtrack to previous non complete set
